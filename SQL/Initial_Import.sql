-- MySQL Script generated by MySQL Workbench
-- Sat May 12 18:46:57 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema project_332
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `professors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `professors` (
  `p_ssn`     INT                                                                              NOT NULL,
  `p_name`    VARCHAR(45)                                                                      NOT NULL,
  `p_address` VARCHAR(45)                                                                      NOT NULL,
  `p_phone`   VARCHAR(45)                                                                      NOT NULL,
  `p_sex`     ENUM ('male', 'female')                                                          NOT NULL,
  `p_title`   ENUM ('Distinguished', 'Full_Professor', 'Associate', 'Assistant', 'Instructor') NOT NULL,
  `p_salary`  INT ZEROFILL                                                                     NOT NULL DEFAULT 0,
  PRIMARY KEY (`p_ssn`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `professor_degrees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `professor_degrees` (
  `p_ssn_fk` INT NOT NULL,
  `degree` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`p_ssn_fk`, `degree`),
  UNIQUE INDEX `prof_de_uniq` (`p_ssn_fk` ASC, `degree` ASC),
  CONSTRAINT `prof_degree`
    FOREIGN KEY (`p_ssn_fk`)
    REFERENCES `professors` (`p_ssn`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `department`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `department` (
  `d_num` INT NOT NULL,
  `d_name` VARCHAR(45) NOT NULL,
  `d_phone` VARCHAR(45) NOT NULL,
  `d_location` VARCHAR(45) NOT NULL,
  `d_chair` INT NOT NULL,
  PRIMARY KEY (`d_num`),
  INDEX `d_chair_idx` (`d_chair` ASC),
  CONSTRAINT `chairperson`
    FOREIGN KEY (`d_chair`)
    REFERENCES `professors` (`p_ssn`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `course` (
  `c_id` INT NOT NULL,
  `c_title` VARCHAR(45) NULL,
  `c_textbook` VARCHAR(45) NULL,
  `c_units` TINYINT NOT NULL DEFAULT 0,
  `c_dept` INT NOT NULL,
  PRIMARY KEY (`c_id`),
  INDEX `offered_by_department_idx` (`c_dept` ASC),
  CONSTRAINT `offered_by_department`
    FOREIGN KEY (`c_dept`)
    REFERENCES `department` (`d_num`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `course_prerequisites`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `course_prerequisites` (
  `preq_for` INT NOT NULL,
  `preq_course` INT NOT NULL,
  PRIMARY KEY (`preq_for`, `preq_course`),
  INDEX `preq_idx` (`preq_course` ASC),
  CONSTRAINT `for`
    FOREIGN KEY (`preq_for`)
    REFERENCES `course` (`c_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `preq`
    FOREIGN KEY (`preq_course`)
    REFERENCES `course` (`c_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `classrooms`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `classrooms` (
  `room_id` INT NOT NULL,
  `capacity` MEDIUMINT ZEROFILL NULL DEFAULT 0,
  PRIMARY KEY (`room_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `student` (
  `cwid`       INT          NOT NULL,
  `s_fname`    VARCHAR(45)  NOT NULL,
  `s_lname`    VARCHAR(45)  NOT NULL,
  `s_areaCode` INT UNSIGNED NOT NULL,
  `s_phone`    INT UNSIGNED NOT NULL,
  `s_address`  VARCHAR(45)  NOT NULL,
  `s_city`     VARCHAR(45)  NOT NULL,
  `s_state`    VARCHAR(45)  NOT NULL,
  `s_zip`      INT          NOT NULL,
  `s_major`    INT          NOT NULL,
  INDEX `major_idx` (`s_major` ASC),
  PRIMARY KEY (`cwid`),
  CONSTRAINT `major`
    FOREIGN KEY (`s_major`)
    REFERENCES `department` (`d_num`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `minors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `minors` (
  `student_m` INT NOT NULL,
  `minor_department` INT NOT NULL,
  PRIMARY KEY (`student_m`, `minor_department`),
  INDEX `minor_department_idx` (`minor_department` ASC),
  CONSTRAINT `minor_student`
    FOREIGN KEY (`student_m`)
    REFERENCES `student` (`cwid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `minor_department`
    FOREIGN KEY (`minor_department`)
    REFERENCES `department` (`d_num`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `course_sections`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `course_sections` (
  `course_fkey` INT NOT NULL,
  `section_num` INT NOT NULL,
  `classroom` INT NOT NULL,
  `instructor` INT NOT NULL,
  PRIMARY KEY (`course_fkey`, `section_num`),
  INDEX `fkey_classrom_idx` (`classroom` ASC),
  INDEX `fkey_inst_idx` (`instructor` ASC),
  INDEX `section_num_idx` (`section_num` ASC),
  CONSTRAINT `fkey_course`
    FOREIGN KEY (`course_fkey`)
    REFERENCES `course` (`c_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkey_classrom`
    FOREIGN KEY (`classroom`)
    REFERENCES `classrooms` (`room_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkey_inst`
    FOREIGN KEY (`instructor`)
    REFERENCES `professors` (`p_ssn`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `class_meetings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `class_meetings` (
  `meeting_section` INT NOT NULL,
  `day` ENUM('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday') NOT NULL,
  `start_time` TIME NOT NULL,
  `end_time` TIME NOT NULL,
  PRIMARY KEY (`meeting_section`, `day`),
  INDEX `fkey_section_idx` (`meeting_section` ASC),
  CONSTRAINT `fkey_meeting_section`
    FOREIGN KEY (`meeting_section`)
    REFERENCES `course_sections` (`section_num`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `enrollment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `enrollment` (
  `enrolled_section` INT                                                                                 NOT NULL,
  `enrolled_student` INT                                                                                 NOT NULL,
  `grade`            ENUM ('A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'D-', 'F', 'W', 'IP') NOT NULL DEFAULT 'IP',
  PRIMARY KEY (`enrolled_section`, `enrolled_student`),
  INDEX `fkey_enrolled_student_idx` (`enrolled_student` ASC),
  INDEX `fkey_enrolled_section_idx` (`enrolled_section` ASC),
  CONSTRAINT `fkey_enrolled_section`
    FOREIGN KEY (`enrolled_section`)
    REFERENCES `course_sections` (`section_num`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fkey_enrolled_student`
    FOREIGN KEY (`enrolled_student`)
    REFERENCES `student` (`cwid`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
